{"version":3,"sources":["reduxApp/types.js","reduxApp/actions.js","components/AuthForm.js","components/RegistrationForm.js","components/Header.js","components/BookItem.js","components/BookList.js","pages/Home.js","components/BookForm.js","components/ChangeBookForm.js","components/AlertSuccess.js","pages/Card.js","App.js","reduxApp/rootReducer.js","index.js"],"names":["CREATE_BOOK","GET_REDACTION_FORM","DEACTIVATE_CHANGE_FORM","HIDE_ALERT_SUCCESS","SIGN_IN","SIGN_OUT","WILL_CREATE_ACCOUNT","WILL_SIGN_IN","hideAlertSuccess","type","signIn","email","payload","AuthForm","useState","password","user","setUser","dispatch","useDispatch","regActive","useSelector","state","hasAccountGlobal","userEmailGlobal","className","slassName","onClick","firebase","auth","signOut","then","catch","error","console","log","onSubmit","e","preventDefault","contains","test","length","alert","signInWithEmailAndPassword","code","writeLogin","placeholder","value","onChange","target","required","RegistrationForm","registration","createUserWithEmailAndPassword","createAccount","Header","to","exact","BookItem","book","title","autor","year","isbn","database","ref","uniqKey","remove","BookList","props","isloaded","books","on","elem","booksArr","item","val","hasOwnProperty","itemBook","push","setState","off","this","role","map","i","id","Component","connect","Home","BookForm","bookObj","setBookObj","activeChangeForm","event","ChangeBookForm","changedBook","localState","setlocalState","update","defaultValue","AlertSuccess","showAlertSuccess","data-bs-dismiss","aria-label","Card","App","useEffect","onAuthStateChanged","path","component","initialState","hiddenForm","veriError","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","action","created","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a212b4d.chunk.js","sourcesContent":["export const CREATE_BOOK = 'CREATE_BOOK';\r\nexport const HIDE_FORM = 'HIDE_FORM';\r\nexport const GET_REDACTION_FORM = 'GET_REDACTION_FORM';\r\nexport const DEACTIVATE_CHANGE_FORM = 'DEACTIVATE_CHANGE_FORM';\r\nexport const HIDE_ALERT_SUCCESS = 'HIDE_ALERT_SUCCESS';\r\nexport const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\nexport const WILL_CREATE_ACCOUNT = 'WILL_CREATE_ACCOUNT';\r\nexport const WILL_SIGN_IN = 'WILL_SIGN_IN';\r\n","import {CREATE_BOOK, GET_REDACTION_FORM,\r\n        DEACTIVATE_CHANGE_FORM, HIDE_ALERT_SUCCESS,\r\n        SIGN_IN, SIGN_OUT, WILL_CREATE_ACCOUNT,\r\n        WILL_SIGN_IN} from './types';\r\n\r\nexport const createBook = () => {\r\n  return{\r\n    type: CREATE_BOOK,\r\n    payload: {\r\n      tets: 'payload'\r\n    }\r\n  }\r\n}\r\n\r\nexport const getDataToChange = (data) => {\r\n  return{\r\n    type: GET_REDACTION_FORM,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const deactivateChangeForm = () => {\r\n  return{\r\n    type: DEACTIVATE_CHANGE_FORM,\r\n  }\r\n}\r\n\r\nexport const hideAlertSuccess = () => {\r\n  return{\r\n    type: HIDE_ALERT_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const signIn = (email) => {\r\n  return{\r\n    type: SIGN_IN,\r\n    payload: email,\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return{\r\n    type: SIGN_OUT,\r\n  }\r\n}\r\n\r\nexport const willCreateAccount = () => {\r\n  return{\r\n    type: WILL_CREATE_ACCOUNT,\r\n  }\r\n}\r\n\r\nexport const willSignIn = () => {\r\n  return{\r\n    type: WILL_SIGN_IN,\r\n  }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport * as firebase from 'firebase';\r\nimport {signIn, signOut, willCreateAccount} from '../reduxApp/actions';\r\n\r\nexport const AuthForm = () => {\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  const regActive = useSelector(state => state.regActive);\r\n  const hasAccountGlobal = useSelector(state => state.hasAccountGlobal);\r\n  const userEmailGlobal = useSelector(state => state.email);\r\n\r\n  const writeLogin = () => {\r\n    const {email, password} = user;\r\n\r\n    firebase.default.auth().signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        dispatch(signIn())\r\n      })\r\n      .catch((error) => {if(error.code === 'auth/user-not-found'){\r\n            alert('Нет такого аккаунта! Возможно надо его создать!')\r\n          }\r\n        });\r\n  }\r\n\r\n  const authSubmitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const contains = /@/i.test(user.email);\r\n\r\n    if(user.password.length < 6){\r\n      alert('Пароль должен быть длиннее шести знаков!')\r\n    }else if(user.email.length < 5 || !contains ){\r\n      alert('Неверный формат Email')\r\n    }else{\r\n      writeLogin()\r\n    }\r\n\r\n    setUser({\r\n      email: '',\r\n      password: '',\r\n    })\r\n  }\r\n\r\n  const needRegHandler = () => {\r\n    dispatch(willCreateAccount())\r\n  }\r\n\r\n  const userOutHandler = () => {\r\n    firebase.default.auth().signOut()\r\n      .then(() => {dispatch(signOut())})\r\n      .catch((error) => {console.log(error)})\r\n  }\r\n\r\n if(regActive){\r\n   return null\r\n }else if(hasAccountGlobal){\r\n   return <div className=\"container\">\r\n            Вход выполнен: <br/>\r\n            <span slassName=\"user-name\">\r\n              {userEmailGlobal}\r\n              <button type=\"button\"\r\n                      className=\"user-out\"\r\n                      onClick={userOutHandler}>\r\n                Выйти\r\n              </button>\r\n            </span>\r\n          </div>\r\n }else{\r\n   return(\r\n     <div className=\"container auth-wrapper\">\r\n       <form onSubmit={authSubmitHandler}>\r\n         <div className=\"form-group\">\r\n           <input type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  value={user.email}\r\n                  onChange={e => setUser({...user, email: e.target.value})}\r\n                  required\r\n                  />\r\n           <input type=\"password\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Password\"\r\n                  value={user.password}\r\n                  onChange={e => setUser({...user, password: e.target.value})}\r\n                  required\r\n                  />\r\n         </div>\r\n         <button type=\"submit\"\r\n                 className=\"btn btn-outline-success\"\r\n                 >\r\n           Войти\r\n         </button>\r\n       </form>\r\n       <div className=\"container\">\r\n         <span className=\"buttonToRegistration\" onClick={needRegHandler}>\r\n           Или создать аккаунт\r\n         </span>\r\n       </div>\r\n     </div>\r\n   )\r\n }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport * as firebase from 'firebase';\r\nimport {willSignIn, signIn} from '../reduxApp/actions';\r\n\r\nexport const RegistrationForm = () => {\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n    registration: false,\r\n  })\r\n\r\n  const dispatch = useDispatch();\r\n  const regActive = useSelector(state => state.regActive);\r\n  const hasAccountGlobal = useSelector(state => state.hasAccountGlobal);\r\n\r\n  const createAccount = () => {\r\n    const {email, password} = user;\r\n\r\n    firebase.default.auth().createUserWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        dispatch(signIn())\r\n      })\r\n      .catch((error) => {console.log(error)\r\n                          alert('Ошибка! Попробуйте еще раз.')})\r\n  }\r\n\r\n  const regSubmitHandler = (e) => {\r\n    e.preventDefault()\r\n\r\n    const contains = /@/i.test(user.email);\r\n\r\n    if(user.password.length < 6){\r\n      alert('Пароль должен быть длиннее шести знаков!')\r\n    }else if(user.email.length < 5 || !contains ){\r\n      alert('Неверный формат Email')\r\n    }else{\r\n      createAccount()\r\n    }\r\n\r\n    setUser({\r\n      email:'',\r\n      password: '',\r\n    })\r\n  }\r\n\r\n  const needAuthHandler = () => {\r\n    dispatch(willSignIn())\r\n  }\r\n\r\n  if(regActive && hasAccountGlobal === false){\r\n    return(\r\n      <div className=\"container auth-wrapper\">\r\n        <form onSubmit={regSubmitHandler}>\r\n          <div className=\"form-group\">\r\n            <input type=\"text\"\r\n                   className=\"form-control\"\r\n                   placeholder=\"Email\"\r\n                   value={user.email}\r\n                   onChange={e => setUser({...user, email: e.target.value})}\r\n                   required\r\n                   />\r\n            <input type=\"password\"\r\n                   className=\"form-control\"\r\n                   placeholder=\"Password\"\r\n                   value={user.password}\r\n                   onChange={e => setUser({...user, password: e.target.value})}\r\n                   required\r\n                   />\r\n          </div>\r\n          <button type=\"submit\"\r\n                  className=\"btn btn-outline-success\">\r\n            Создать аккаунт\r\n          </button>\r\n        </form>\r\n        <div className=\"container\">\r\n          <span className=\"buttonToRegistration\" onClick={needAuthHandler}>\r\n            Или войти в существующий аккаунт.\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  else{\r\n    return null\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\nimport {AuthForm} from './AuthForm';\r\nimport {RegistrationForm} from '../components/RegistrationForm';\r\n\r\nexport const Header = () => {\r\n  const hasAccountGlobal = useSelector(state => state.hasAccountGlobal);\r\n\r\n  return(\r\n    <div className=\"navbar-wrapper\">\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid menu-wrapper\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"navbar-brand nav-link\"\r\n                       to=\"/\"\r\n                       exact>\r\n                Book Catalog\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <AuthForm />\r\n          <RegistrationForm />\r\n        </div>\r\n      </nav>\r\n      {!hasAccountGlobal ? \r\n        <div className=\"warning-reg-wrapper\">\r\n          <span className=\"warning-reg\">\r\n            Чтобы редактировать список необходимо авторизоваться.\r\n          </span>\r\n        </div> : null}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getDataToChange} from '../reduxApp/actions';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport const BookItem = ({book}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const hasAccountGlobal = useSelector(state => state.hasAccountGlobal);\r\n\r\n  const removeBook = () => {\r\n    const db = firebase.default.database();\r\n    db.ref('books/' + book.uniqKey).remove();\r\n  }\r\n\r\n  return(\r\n    <div className=\"book-item container\">\r\n      <div className=\"row row-cols-3\">\r\n        <div className=\"col\">Название: {book.title}</div>\r\n        <div className=\"col\">Автор: {book.autor}</div>\r\n        <div className=\"btn-container col\">\r\n        {hasAccountGlobal?\r\n          <NavLink className=\"nav-link\"\r\n                   to=\"/card\"\r\n                   onClick={() => {dispatch(getDataToChange(book))}}\r\n                   >\r\n            Редактировать\r\n          </NavLink> : null\r\n        }\r\n        </div>\r\n        <div className=\"col\">Год издания: {book.year}</div>\r\n        <div className=\"col\">ISBN: {book.isbn}</div>\r\n        {hasAccountGlobal?\r\n          <div className=\"btn-container col\">\r\n          <button type=\"button\"\r\n                  className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={removeBook}\r\n                  >Удалить</button>\r\n          </div> : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {Component} from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {BookItem} from './BookItem';\r\nimport {connect} from 'react-redux';\r\n\r\nclass BookList extends Component  {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      isloaded: false,\r\n      books: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    const db = firebase.default.database();\r\n    // console.log(db);\r\n    const booksData = db.ref('books');\r\n\r\n    booksData.on('value', (elem) => {\r\n    // console.log(elem.val());\r\n    let booksArr = [];\r\n    for (var item in elem.val()) {\r\n      if (elem.val().hasOwnProperty(item)) {\r\n        let itemBook = {...elem.val()[item], uniqKey: item};\r\n\r\n        booksArr.push(itemBook)\r\n      }\r\n    }\r\n    this.setState({books: booksArr})\r\n    // console.log(this.state);\r\n    })\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    const db = firebase.default.database();\r\n    const booksData = db.ref('books');\r\n    booksData.off()\r\n  }\r\n\r\n  render(){\r\n    console.log('hasAccountGlobal: ', this.props.hasAccountGlobal);\r\n\r\n    if(this.state.books.length === 0){\r\n      return(\r\n        <div className=\"alert alert-warning\" role=\"alert\">\r\n          loading...\r\n        </div>\r\n      )\r\n    }\r\n    return(\r\n      <div>\r\n        {this.props.hasAccountGlobal ?\r\n          <div className=\"container add-book-wrapper\">\r\n            <NavLink className=\"nav-link add-book-link\"\r\n                     to=\"/card\">\r\n              Добавить книгу\r\n            </NavLink>\r\n          </div> : null\r\n        }\r\n\r\n        <ul className=\"list-group\">\r\n         {this.state.books.map((book, i) => (\r\n           <li className=\"list-group-item\"\r\n               key={book.id = i + 1}>\r\n               <BookItem book={book}/>\r\n           </li>\r\n         ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    hasAccountGlobal: state.hasAccountGlobal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BookList)\r\n","import React, {Fragment} from 'react';\r\nimport {Header} from '../components/Header';\r\nimport BookList from '../components/BookList';\r\n\r\nexport const Home = () => {\r\n\r\n  return(\r\n    <Fragment>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <BookList />\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {useState} from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport const BookForm = () => {\r\n  const [bookObj, setBookObj] = useState({\r\n    title: '',\r\n    autor: '',\r\n    year: '',\r\n    isbn: ''\r\n  });\r\n\r\n  const activeChangeForm = useSelector(state => state.activeChangeForm);\r\n\r\n  const sendData = () => {\r\n    const db = firebase.default.database();\r\n    db.ref('books').push(bookObj)\r\n  }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n    console.log(bookObj);\r\n    sendData()\r\n    setBookObj({\r\n      title: '',\r\n      autor: '',\r\n      year: '',\r\n      isbn: ''\r\n    })\r\n  }\r\n\r\n  if (!activeChangeForm) {\r\n    return(\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"container redact-title\">\r\n          <h3> Добавление новой книги: </h3>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Название книги\"\r\n                 value={bookObj.title}\r\n                 onChange={e => setBookObj({...bookObj, title: e.target.value})}\r\n                 required\r\n                 />\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Автор\"\r\n                 value={bookObj.autor}\r\n                 onChange={e => setBookObj({...bookObj, autor: e.target.value})}\r\n                 required\r\n                 />\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Год издания\"\r\n                 value={bookObj.year}\r\n                 onChange={e => setBookObj({...bookObj, year: e.target.value})}\r\n                 required\r\n                 />\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"ISBN\"\r\n                 value={bookObj.isbn}\r\n                 onChange={e => setBookObj({...bookObj, isbn: e.target.value})}\r\n                 required\r\n                 />\r\n        </div>\r\n        <button type=\"submit\">Создать</button>\r\n      </form>\r\n    )\r\n  }else{\r\n    return null\r\n  }\r\n\r\n\r\n}\r\n","import React, {useState} from 'react';\r\nimport * as firebase from 'firebase';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {deactivateChangeForm} from '../reduxApp/actions';\r\n\r\nexport const ChangeBookForm = () => {\r\n  const dispatch = useDispatch();\r\n  const changedBook = useSelector(state => state.changedBook);\r\n  const activeChangeForm = useSelector(state => state.activeChangeForm);\r\n\r\n  const [localState, setlocalState] = useState(changedBook);\r\n\r\n  const changeData = () => {\r\n    const db = firebase.default.database();\r\n    const bookRef = db.ref('books/' + changedBook.uniqKey);\r\n    bookRef.update({\r\n      autor: localState.autor,\r\n      title: localState.title,\r\n      year:  localState.year,\r\n      isbn:  localState.isbn,\r\n    })\r\n  }\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    changeData()\r\n    dispatch(deactivateChangeForm())\r\n  }\r\n\r\n  if(activeChangeForm){\r\n    return(\r\n      <form onSubmit={submitHandler}>\r\n        <div className=\"container redact-title\">\r\n          <h3> Редактирование данных: </h3>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Название книги\"\r\n                 defaultValue={changedBook.title}\r\n                 onChange={e => setlocalState({...localState, title: e.target.value})}\r\n                 required\r\n                 />\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Автор\"\r\n                 defaultValue={changedBook.autor}\r\n                 onChange={e => setlocalState({...localState, autor: e.target.value})}\r\n                 required\r\n                 />\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"Год издания\"\r\n                 defaultValue={changedBook.year}\r\n                 onChange={e => setlocalState({...localState, year: e.target.value})}\r\n                 required\r\n                 />\r\n          <input type=\"text\"\r\n                 className=\"form-control\"\r\n                 placeholder=\"ISBN\"\r\n                 defaultValue={changedBook.isbn}\r\n                 onChange={e => setlocalState({...localState, isbn: e.target.value})}\r\n                 required\r\n                 />\r\n        </div>\r\n           <button type=\"submit\">\r\n               Отправить изменения\r\n           </button>\r\n      </form>\r\n    )\r\n  }else {\r\n    return null\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {hideAlertSuccess} from '../reduxApp/actions';\r\n\r\nexport const AlertSuccess = () => {\r\n  const dispatch = useDispatch();\r\n  const showAlertSuccess = useSelector(state => state.showAlertSuccess);\r\n\r\n  if (showAlertSuccess) {\r\n    return(\r\n      <div className=\"alert alert-success\" role=\"alert\">\r\n\r\n          <span className=\"book-change-msg\">\r\n            Данные этой книги успешно изменены!\r\n          </span>\r\n          <NavLink className=\"nav-link\"\r\n                   to=\"/\">\r\n             <span className=\"book-change-msg\" onClick={() => dispatch(hideAlertSuccess())}>\r\n               Перейдите на главную страницу, чтобы увидеть список, или создайте новую книгу в форме ниже.\r\n             </span>\r\n          </NavLink>\r\n\r\n        <button type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"alert\"\r\n                aria-label=\"Close\"\r\n                onClick={() => dispatch(hideAlertSuccess())}></button>\r\n      </div>\r\n    )\r\n  }else{\r\n    return null\r\n  }\r\n\r\n\r\n}\r\n","import React, {Fragment} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {BookForm} from '../components/BookForm';\r\nimport {ChangeBookForm} from '../components/ChangeBookForm';\r\nimport {AlertSuccess} from '../components/AlertSuccess';\r\n\r\nexport const Card = () => {\r\n\r\n  return(\r\n    <Fragment>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link back-to-main\"\r\n                       to=\"/\"\r\n                       exact>\r\n                &#8656; Назад на главную\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <AlertSuccess />\r\n      <BookForm />\r\n      <ChangeBookForm />\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {useEffect} from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport * as firebase from 'firebase';\nimport {Home} from './pages/Home';\nimport {Card} from './pages/Card';\nimport {signIn} from './reduxApp/actions';\n\nexport function App() {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    firebase.default.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(user.email);\n        dispatch(signIn(user.email))\n      } else {\n        console.log('no-user');\n      }\n    })\n\n  });\n\n  return (\n    <BrowserRouter>\n      <div className=\"container pt-4\">\n        <Switch>\n          <Route path={'/'} exact component={Home}/>\n          <Route path={'/card'} component={Card}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n","import {CREATE_BOOK, GET_REDACTION_FORM,\r\n        DEACTIVATE_CHANGE_FORM, HIDE_ALERT_SUCCESS,\r\n        SIGN_IN, SIGN_OUT, WILL_CREATE_ACCOUNT,\r\n        WILL_SIGN_IN} from './types';\r\n\r\nconst initialState =\r\n  {\r\n    hiddenForm: false,\r\n    activeChangeForm: false,\r\n    showAlertSuccess: false,\r\n    hasAccountGlobal: false,\r\n    regActive: false,\r\n    email: '',\r\n    veriError: null,\r\n  }\r\n;\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return {...state, ...{hasAccountGlobal: true,\r\n                            email: action.payload,\r\n                            regActive: false,}};\r\n    case SIGN_OUT:\r\n      return {...state, ...{hasAccountGlobal: false,\r\n                            email: '',}};\r\n    case WILL_CREATE_ACCOUNT:\r\n      return {...state, regActive: true };\r\n    case WILL_SIGN_IN:\r\n      return {...state, regActive: false };\r\n    case CREATE_BOOK:\r\n      return {...state, created: true};\r\n    case GET_REDACTION_FORM:\r\n      return {...state, ...{changedBook: action.payload,\r\n                            activeChangeForm: true}};\r\n    case DEACTIVATE_CHANGE_FORM:\r\n      return {...state, ...{activeChangeForm: false,\r\n                            showAlertSuccess: true}};\r\n    case HIDE_ALERT_SUCCESS:\r\n      return {...state, showAlertSuccess: false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport * as firebase from 'firebase';\nimport {App} from './App';\nimport './index.css';\nimport {rootReducer} from './reduxApp/rootReducer';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyATMJ6bMFCbQ6xtS_iqlMzqh7m4KibMZiw\",\n    authDomain: \"book-catalog-spa.firebaseapp.com\",\n    databaseURL: \"https://book-catalog-spa-default-rtdb.firebaseio.com\",\n    projectId: \"book-catalog-spa\",\n    storageBucket: \"book-catalog-spa.appspot.com\",\n    messagingSenderId: \"878044568330\",\n    appId: \"1:878044568330:web:4851aa5a655179d90df8f3\"\n};\n\nfirebase.default.initializeApp(firebaseConfig)\n\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}